{"version":3,"sources":["node_modules/browser-pack/_prelude.js","resources/ts/Filtered/Controller.ts","resources/ts/Filtered/Filter/DistanceFilter.ts","resources/ts/Filtered/Filter/Filter.ts","resources/ts/Filtered/Filter/NumberFilter.ts","resources/ts/Filtered/Filter/ValueFilter.ts","resources/ts/Filtered/Filtered.ts","resources/ts/Filtered/View/CalendarView.ts","resources/ts/Filtered/View/ListView.ts","resources/ts/Filtered/View/MapView.ts","resources/ts/Filtered/View/TableView.ts","resources/ts/Filtered/View/View.ts","resources/ts/Filtered/ViewSelector.ts","resources/ts/bootstrap.ts"],"names":[],"mappings":"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","file":"ext.srf.filtered.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { Options, ResultData } from \"../types\";\ndeclare let srf: any;\n\nimport { View } from \"./View/View\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport class Controller {\n\tprivate target: JQuery = undefined;\n\n\tprivate views: { [key: string]: View } = {};\n\tprivate filters: { [key: string]: Filter } = {};\n\tprivate currentView: View = undefined;\n\tprivate data: ResultData;\n\tprivate printRequests: Options;\n\n\tpublic constructor( target: JQuery, data: ResultData, printRequests: Options ) {\n\t\tthis.target = target;\n\t\tthis.data = data;\n\t\tthis.printRequests = printRequests;\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tif ( !this.data[ rowId ].hasOwnProperty( 'visible' ) ) {\n\t\t\t\tthis.data[ rowId ].visible = {};\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.data;\n\t}\n\n\tpublic getPrintRequests(): Options {\n\t\treturn this.printRequests;\n\t}\n\n\tpublic getPath() {\n\t\treturn srf.settings.get( 'srfgScriptPath' ) + '/formats/filtered/resources/';\n\t}\n\n\tpublic attachView( viewid: string, view: View ) {\n\n\t\tthis.views[ viewid ] = view;\n\n\t\tif ( this.currentView === undefined ) {\n\t\t\tthis.currentView = view;\n\t\t\tview.show();\n\t\t} else {\n\t\t\tview.hide();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic getView( viewId: string ): View {\n\t\treturn this.views[ viewId ];\n\t}\n\n\tpublic attachFilter( filter: Filter ) {\n\t\tlet filterId = filter.getId();\n\n\t\tthis.filters[ filterId ] = filter;\n\n\t\tfilter.init();\n\n\t\tthis.onFilterUpdated( filterId );\n\n\t\treturn this;\n\t}\n\n\tpublic getFilter( filterId: string ): Filter {\n\t\treturn this.filters[ filterId ];\n\t}\n\n\tpublic show() {\n\t\tthis.initializeFilters();\n\t\tthis.target.show();\n\t\tthis.switchToView( this.currentView );\n\t}\n\n\tprivate switchToView( view: View ) {\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tthis.currentView.hide();\n\t\t}\n\n\t\tthis.currentView = view;\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tview.show();\n\t\t}\n\n\t}\n\n\tprivate initializeFilters() {\n\t\tlet toShow: string[] = [];\n\t\tlet toHide: string[] = [];\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tfor ( let filterId in this.filters ) {\n\t\t\t\tthis.data[ rowId ].visible[ filterId ] = this.filters[ filterId ].isVisible( rowId );\n\t\t\t}\n\t\t\tif ( this.isVisible( rowId ) ) {\n\t\t\t\ttoShow.push( rowId );\n\t\t\t} else {\n\t\t\t\ttoHide.push( rowId );\n\t\t\t}\n\t\t}\n\n\t\tthis.hideRows( toHide );\n\t\tthis.showRows( toShow );\n\t}\n\n\tpublic onViewSelected( viewID: string ) {\n\t\tthis.switchToView( this.views[ viewID ] );\n\t}\n\n\tpublic onFilterUpdated( filterId: string ) {\n\t\tlet toShow: string[] = [];\n\t\tlet toHide: string[] = [];\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tlet oldVisible: boolean = this.data[ rowId ].visible[ filterId ];\n\t\t\tlet newVisible: boolean = this.filters[ filterId ].isVisible( rowId );\n\n\t\t\tif ( oldVisible !== newVisible ) {\n\n\t\t\t\tthis.data[ rowId ].visible[ filterId ] = newVisible;\n\n\t\t\t\tif ( newVisible && this.isVisible( rowId ) ) {\n\t\t\t\t\ttoShow.push( rowId );\n\t\t\t\t\t// controller.showRow( rowId );\n\t\t\t\t} else {\n\t\t\t\t\ttoHide.push( rowId );\n\t\t\t\t\t// controller.hideRow( rowId );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.hideRows( toHide );\n\t\tthis.showRows( toShow );\n\t}\n\n\tpublic isVisible( rowId: any ) {\n\t\tfor ( let filterId in this.data[ rowId ].visible ) {\n\t\t\tif ( !this.data[ rowId ].visible[ filterId ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate hideRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].hideRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].showRows( rowIds );\n\t\t}\n\t}\n}\n","import { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class DistanceFilter extends Filter {\n\n\tprivate static readonly earthRadius: { [key: string]: number } = {\n\t\tm: 6371008.8,\n\t\tkm: 6371.0088,\n\t\tmi: 3958.7613,\n\t\tnm: 3440.0695,\n\t\tÅ: 63710088000000000\n\t};\n\n\tprivate earthRadiusValue: number = DistanceFilter.earthRadius.km;\n\tprivate filterValue: number = 0;\n\n\tpublic init() {\n\n\t\tlet values = this.controller.getData();\n\n\t\tlet origin = this.options[ 'origin' ];\n\n\t\tif ( !( origin !== undefined && origin.hasOwnProperty( 'lat' ) && origin.hasOwnProperty( 'lng' ) ) ) {\n\t\t\tthis.target.detach();\n\t\t\treturn;\n\t\t}\n\n\t\tlet unit = 'km';\n\n\t\tif ( this.options[ 'unit' ] && DistanceFilter.earthRadius[ this.options[ 'unit' ] ] ) {\n\t\t\tunit = this.options[ 'unit' ];\n\t\t}\n\n\t\tthis.earthRadiusValue = DistanceFilter.earthRadius[ unit ];\n\n\t\tlet maxValue: number = this.updateDistances( origin );\n\n\t\tlet precision = 10 ** ( Math.floor( Math.log( maxValue ) * Math.LOG10E ) - 1);\n\n\t\tif ( this.options[ 'max' ] !== undefined && this.options[ 'max' ] > maxValue ) {\n\t\t\tmaxValue = this.options[ 'max' ];\n\t\t} else {\n\t\t\tmaxValue = Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\tthis.filterValue = this.options[ 'initial value' ] ? Math.min( this.options[ 'initial value' ], maxValue ) : maxValue;\n\n\t\t// build filter controls\n\t\tlet filtercontrols = this.target;\n\n\t\tfiltercontrols\n\t\t.append( '<div class=\"filtered-distance-label\"><span>' + this.options[ 'label' ] + '</span></div>' );\n\n\t\tfiltercontrols = this.addControlForCollapsing( filtercontrols );\n\n\t\tlet readout = $( '<div class=\"filtered-distance-readout\">' + this.filterValue + '</div>' );\n\n\t\tlet table = $( '<table class=\"filtered-distance-table\"><tbody><tr><td class=\"filtered-distance-min-cell\">0</td>' +\n\t\t\t'<td class=\"filtered-distance-slider-cell\"><div class=\"filtered-distance-slider\"></div></td>' +\n\t\t\t'<td class=\"filtered-distance-max-cell\">' + maxValue + '</td></tr>' +\n\t\t\t'<tr><td colspan=3 class=\"filtered-distance-unit-cell\">' + unit + '</td></tr></tbody></table>' );\n\n\t\tfiltercontrols.append( table );\n\n\t\tlet that = this;\n\t\tmw.loader.using( 'jquery.ui.slider' ).then( function () {\n\n\t\t\ttable.find( '.filtered-distance-slider' )\n\t\t\t.slider( {\n\t\t\t\tanimate: true,\n\t\t\t\tmax: maxValue,\n\t\t\t\tvalue: that.filterValue,\n\t\t\t\tstep: precision / 100\n\t\t\t} )\n\t\t\t.on( 'slidechange', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\teventObject.data.ui = ui;\n\t\t\t\teventObject.data.filter.onFilterUpdated( eventObject );\n\t\t\t} )\n\t\t\t.on( 'slide', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\treadout.text( ui.value );\n\t\t\t} )\n\t\t\t.find( '.ui-slider-handle' )\n\t\t\t.append( readout );\n\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate updateDistances( origin: L.LatLngLiteral ): number {\n\n\t\tlet values = this.controller.getData();\n\t\tlet max = 1;\n\n\t\tlet prId = this.printrequestId;\n\n\t\tfor ( let rowId in values ) {\n\n\t\t\tif ( values[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet distances: number[] = values[ rowId ].data[ this.filterId ].positions.map( ( pos: L.LatLngLiteral ) => this.distance( origin, pos ) );\n\t\t\t\tlet dist = Math.min( ...distances );\n\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = dist;\n\t\t\t\tmax = Math.max( max, dist );\n\t\t\t} else {\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = Infinity;\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic onFilterUpdated( eventObject: JQueryEventObject ) {\n\t\tthis.filterValue = eventObject.data.ui.value;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate distance( a: L.LatLngLiteral, b: L.LatLngLiteral ) {\n\n\t\tconst DEG2RAD = Math.PI / 180.0;\n\n\t\tfunction squared( x: number ) {\n\t\t\treturn x * x\n\t\t}\n\n\t\tlet f =\n\t\t\tsquared( Math.sin( ( b.lat - a.lat ) * DEG2RAD / 2.0 ) ) +\n\t\t\tMath.cos( a.lat * DEG2RAD ) * Math.cos( b.lat * DEG2RAD ) *\n\t\t\tsquared( Math.sin( ( b.lng - a.lng ) * DEG2RAD / 2.0 ) );\n\n\t\treturn this.earthRadiusValue * 2 * Math.atan2( Math.sqrt( f ), Math.sqrt( 1 - f ) );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\treturn this.controller.getData()[ rowId ].data[ this.filterId ].distance <= this.filterValue;\n\t}\n\n}\n","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport abstract class Filter{\n\n\tprotected target: JQuery = undefined;\n\tprotected filterId: string;\n\tprotected printrequestId: string;\n\tprotected controller: Controller;\n\tprotected options: Options = undefined;\n\n\tpublic constructor( filterId: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) {\n\t\tthis.target = target;\n\t\tthis.filterId = filterId;\n\t\tthis.printrequestId = printrequestId;\n\t\tthis.controller = controller;\n\t\tthis.options = options || {};\n\t}\n\n\tpublic init() {};\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getId() {\n\t\treturn this.filterId;\n\t}\n\n\tprotected addControlForCollapsing( filtercontrols: JQuery ): JQuery {\n\t\tlet collapsible = this.options.hasOwnProperty( 'collapsible' ) ? this.options[ 'collapsible' ] : undefined;\n\t\tif ( collapsible === 'collapsed' || collapsible === 'uncollapsed' ) {\n\n\t\t\tlet showControl = $( '<span class=\"filtered-show\">' );\n\t\t\tlet hideControl = $( '<span class=\"filtered-hide\">' );\n\n\t\t\tfiltercontrols\n\t\t\t.prepend( showControl )\n\t\t\t.prepend( hideControl );\n\n\t\t\tfiltercontrols = $( '<div class=\"filtered-collapsible\">' )\n\t\t\t.appendTo( filtercontrols );\n\n\t\t\tlet outercontrols = filtercontrols;\n\n\t\t\tshowControl.click( function () {\n\t\t\t\toutercontrols.slideDown();\n\t\t\t\tshowControl.hide();\n\t\t\t\thideControl.show();\n\t\t\t} );\n\n\t\t\thideControl.click( function () {\n\t\t\t\toutercontrols.slideUp();\n\t\t\t\tshowControl.show();\n\t\t\t\thideControl.hide();\n\t\t\t} );\n\n\t\t\tif ( collapsible === 'collapsed' ) {\n\t\t\t\thideControl.hide();\n\t\t\t\toutercontrols.slideUp( 0 );\n\t\t\t} else {\n\t\t\t\tshowControl.hide();\n\t\t\t}\n\t\t}\n\t\treturn filtercontrols;\n\t}\n\n}","///<reference path=\"../../../../node_modules/@types/ion.rangeslider/index.d.ts\"/>\nimport { Filter } from \"./Filter\";\nimport { Options } from \"../../types\";\n\ndeclare let mw: any;\n\nexport class NumberFilter extends Filter {\n\n\tprivate MODE_RANGE = 0;\n\tprivate MODE_MIN = 1;\n\tprivate MODE_MAX = 2;\n\tprivate MODE_SELECT = 3;\n\n\tprivate filterValueUpper: number = 0;\n\tprivate filterValueLower: number = 0;\n\tprivate mode = this.MODE_RANGE;\n\n\tpublic init() {\n\n\t\tlet values: number[] = this.getValues();\n\n\t\tlet { minValue, maxValue, precision } = this.getRangeParameters( values );\n\n\t\tlet sliderOptions: IonRangeSliderOptions = {\n\t\t\tprettify_enabled: false,\n\t\t\tforce_edges: true,\n\t\t\tgrid: true\n\t\t};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromValues( sliderOptions, values );\n\n\t\t} else {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromRangeParameters( sliderOptions, minValue, maxValue, precision );\n\t\t}\n\n\t\tswitch( this.options[ 'sliders' ] ) {\n\n\t\t\tcase \"min\":\n\n\t\t\t\tthis.mode = this.MODE_MIN;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"max\":\n\n\t\t\t\tthis.mode = this.MODE_MAX;\n\t\t\t\tsliderOptions.from = sliderOptions.to;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"select\":\n\n\t\t\t\tthis.mode = this.MODE_SELECT;\n\t\t\t\tmaxValue = minValue;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tdefault: // == case \"range\"\n\n\t\t\t\tthis.mode = this.MODE_RANGE;\n\t\t\t\tsliderOptions.type = 'double';\n\t\t}\n\n\t\tthis.buildFilterControls( sliderOptions );\n\n\t\tthis.filterValueLower = minValue;\n\t\tthis.filterValueUpper = maxValue;\n\n\t\treturn this;\n\t}\n\n\tprivate adjustSliderOptionsFromRangeParameters( sliderOptions: IonRangeSliderOptions, minValue: number, maxValue: number, precision: number ) {\n\n\t\tsliderOptions.min = minValue;\n\t\tsliderOptions.max = maxValue;\n\t\tsliderOptions.step = this.getStep( precision );\n\n\t\tsliderOptions.from = minValue;\n\t\tsliderOptions.to = maxValue;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from, data.to );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate adjustSliderOptionsFromValues( sliderOptions: IonRangeSliderOptions, values: number[] ) {\n\n\t\tsliderOptions.values = values;\n\n\t\tsliderOptions.from = 0;\n\t\tsliderOptions.to = values.length - 1;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from_value, data.to_value );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate getRangeParameters( values: number[] ) {\n\n\t\tlet minValue = values[ 0 ];\n\t\tlet maxValue = values[ values.length - 1 ];\n\t\tlet precision: number = this.getPrecision( minValue, maxValue );\n\n\t\tif ( !this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tminValue = this.getMinSliderValue( minValue, precision );\n\t\t\tmaxValue = this.getMaxSliderValue( maxValue, precision );\n\t\t}\n\n\t\treturn { minValue, maxValue, precision };\n\t}\n\n\tprivate getValues(): number[] {\n\t\tlet values: number[];\n\t\tif ( this.options.hasOwnProperty( 'values' ) && this.options[ 'values' ][0] !== 'auto' ) {\n\t\t\tvalues =  this.options[ 'values' ]\n\t\t} else {\n\t\t\tvalues =  this.getSortedValues();\n\t\t}\n\n\t\tif ( values.length === 0 ) {\n\t\t\tvalues = [ 0, 0 ];\n\t\t} else if ( values.length === 1 ) {\n\t\t\tvalues.push( values[ 0 ] );\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tprivate buildFilterControls( sliderOptions: IonRangeSliderOptions ) {\n\n\t\tlet filterClassNames: any = {};\n\t\tfilterClassNames[ this.MODE_MIN.toString() ] = \"mode-min\";\n\t\tfilterClassNames[ this.MODE_MAX ] = \"mode-max\";\n\t\tfilterClassNames[ this.MODE_RANGE ] = \"mode-range\";\n\t\tfilterClassNames[ this.MODE_SELECT ] = \"mode-select\";\n\n\t\tlet filtercontrols = this.target;\n\n\t\tlet label = $( `<div class=\"filtered-number-label\"><span>${this.options[ 'label' ]}</span></div>` );\n\t\tfiltercontrols.append( label );\n\n\t\tfiltercontrols = this.addControlForCollapsing( filtercontrols );\n\n\n\t\tlet slider = $( '<input type=\"text\" value=\"\" />' );\n\t\tlet sliderContainer = $( `<div class=\"filtered-number-slider ${filterClassNames[ this.mode ]}\" />` ).append( slider );\n\t\tfiltercontrols.append( sliderContainer );\n\n\t\tif ( this.options.hasOwnProperty( 'caption' ) ) {\n\t\t\tlet caption = `<div class=\"filtered-number-caption\">${this.options[ 'caption' ]}</div>`;\n\t\t\tfiltercontrols.append( caption );\n\t\t}\n\n\t\tslider.ionRangeSlider( sliderOptions );\n\t}\n\n\tprivate getMinSliderValue( minValue: number, precision: number ) {\n\t\tlet requestedMin = this.options[ 'min' ];\n\n\t\tif ( requestedMin === undefined || isNaN( Number( requestedMin ) ) ) {\n\t\t\treturn Math.floor( minValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.min( requestedMin, minValue );\n\t}\n\n\tprivate getMaxSliderValue( maxValue: number, precision: number ) {\n\t\tlet requestedMax = this.options[ 'max' ];\n\n\t\tif ( requestedMax === undefined || isNaN( Number( requestedMax ) ) ) {\n\t\t\treturn Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.max( requestedMax, maxValue );\n\t}\n\n\tprivate getPrecision( minValue: number, maxValue: number ): number {\n\t\tif ( maxValue - minValue > 0 ) {\n\t\t\treturn 10 ** ( Math.floor( Math.log( maxValue - minValue ) * Math.LOG10E ) - 1 );\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tprivate getStep( precision: number ): number {\n\n\t\tlet step = this.options[ 'step' ];\n\n\t\tif ( step !== undefined ) {\n\n\t\t\tstep = Number( step );\n\n\t\t\tif ( !isNaN( step ) ) {\n\t\t\t\treturn step;\n\t\t\t}\n\t\t}\n\n\t\treturn precision / 10;\n\t}\n\n\tprivate getRangeFromValues(): [ number, number ] {\n\n\t\tlet rows = this.controller.getData();\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tif ( rows[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet values: number[] = rows[ rowId ].data[ this.filterId ].values;\n\t\t\t\tmin = Math.min( min, ...values );\n\t\t\t\tmax = Math.max( max, ...values );\n\t\t\t}\n\t\t}\n\n\t\treturn [ min, max ];\n\t}\n\n\tprivate getSortedValues(): number[] {\n\n\t\tlet valueArray: number[] = [];\n\t\tlet rows = this.controller.getData();\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tlet cells = rows[ rowId ].data;\n\n\t\t\tif ( cells.hasOwnProperty( this.filterId ) ) {\n\n\t\t\t\tlet values = cells[ this.filterId ].values;\n\n\t\t\t\tfor ( let valueId in values ) {\n\n\t\t\t\t\tlet value = Number( values[ valueId ] );\n\n\t\t\t\t\tif ( valueArray.indexOf( value ) === -1 ) {\n\t\t\t\t\t\tvalueArray.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn valueArray.sort( ( a: any, b: any ) => a - b );\n\t}\n\n\tpublic onFilterUpdated( from: number, to: number ) {\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase this.MODE_MIN:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_MAX:\n\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_SELECT:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tdefault: // case this.MODE_RANGE:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = to;\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) ) {\n\n\t\t\tfor ( let value of rowdata[ this.filterId ].values ) {\n\t\t\t\tif ( value >= this.filterValueLower && value <= this.filterValueUpper ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n","///<reference path=\"../../../../node_modules/@types/select2/index.d.ts\"/>\n\nimport { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class ValueFilter extends Filter {\n\n\tprivate values: any = {};\n\tprivate visibleValues: string[] = [];\n\n\tprivate _useOr = true;\n\n\tpublic init() {\n\t\tthis.values = this.getSortedValues();\n\t\tthis.buildControl();\n\t}\n\n\tpublic useOr( useOr: boolean ) {\n\t\tthis._useOr = useOr;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate getSortedValues(): any {\n\n\t\t/** Map of value => label distinct values */\n\t\tlet distinctValues: any = {};\n\t\t/** Map of value => sort value distinct values */\n\t\tlet distinctSortValues: any = {};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\n\t\t\treturn this.options[ 'values' ].map(\n\t\t\t\t( item: string ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprintoutValue: item,\n\t\t\t\t\t\tformattedValue: item\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t} else {\n\t\t\t// build filter values from available values in result set\n\t\t\tlet data = this.controller.getData();\n\t\t\tlet sortedEntries: any[] = [];\n\t\t\tfor ( let id in data ) {\n\n\t\t\t\tlet printoutValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'values' ];\n\t\t\t\tlet printoutFormattedValues = data[ id ][ 'printouts' ][ this.printrequestId ][ 'formatted values' ];\n\t\t\t\tlet printoutSortValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'sort values' ];\n\n\t\t\t\tfor ( let i in printoutValues ) {\n\t\t\t\t\tlet printoutFormattedValue = printoutFormattedValues[ i ];\n\n\t\t\t\t\tif ( printoutFormattedValue.indexOf( '<a' ) > -1 ) {\n\t\t\t\t\t\tprintoutFormattedValue = /<a.*>(.*?)<\\/a>/.exec( printoutFormattedValue )[ 1 ];\n\t\t\t\t\t}\n\n\t\t\t\t\tdistinctValues[ printoutValues[ i ] ] = printoutFormattedValue;\n\t\t\t\t\tdistinctSortValues[ printoutValues[ i ] ] = printoutSortValues[ i ];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let printoutValue in distinctSortValues ) {\n\t\t\t\tsortedEntries.push( {\n\t\t\t\t\tprintoutValue: printoutValue,\n\t\t\t\t\tsortValue: distinctSortValues[ printoutValue ],\n\t\t\t\t\tformattedValue: distinctValues[ printoutValue ]\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tsortedEntries.sort(\n\t\t\t\t( a: any, b: any ) => {\n\t\t\t\t\treturn a.sortValue.localeCompare( b.sortValue );\n\t\t\t\t} );\n\t\t\treturn sortedEntries;\n\n\t\t}\n\n\t}\n\n\tprivate buildControl() {\n\n\t\tlet filtercontrols = this.target;\n\n\t\t// insert the label of the printout this filter filters on\n\t\tfiltercontrols.append( `<div class=\"filtered-value-label\"><span>${this.options[ 'label' ]}</span></div>` );\n\n\t\tfiltercontrols = this.addControlForCollapsing( filtercontrols );\n\t\tthis.addControlForSwitches( filtercontrols );\n\n\t\tlet maxCheckboxes = this.options.hasOwnProperty( 'max checkboxes' ) ? this.options[ 'max checkboxes' ] : 5;\n\n\t\tif ( this.values.length > maxCheckboxes ) {\n\t\t\tfiltercontrols.append( this.getSelected2Control() );\n\t\t} else {\n\t\t\tfiltercontrols.append( this.getCheckboxesControl() );\n\t\t}\n\n\t}\n\n\tprivate getCheckboxesControl() {\n\n\t\tlet checkboxes = $( '<div class=\"filtered-value-checkboxes\" style=\"width: 100%;\">' );\n\n\t\t// insert options (checkboxes and labels)\n\t\tfor ( let value of this.values ) {\n\t\t\tcheckboxes.append( `<div class=\"filtered-value-option\"><input type=\"checkbox\" class=\"filtered-value-value\" value=\"${value.printoutValue}\" ><label>${value.formattedValue || value.printoutValue}</label></div>` );\n\t\t}\n\n\t\t// attach event handler\n\t\tcheckboxes\n\t\t.on( 'change', ':checkbox', ( eventObject: JQueryEventObject ) => {\n\t\t\tlet checkboxElement = <HTMLInputElement> eventObject.currentTarget;\n\t\t\tthis.onFilterUpdated( checkboxElement.value, checkboxElement.checked );\n\t\t} );\n\n\t\treturn checkboxes;\n\t}\n\n\tprivate getSelected2Control() {\n\n\t\tlet select = $( '<select class=\"filtered-value-select\" style=\"width: 100%;\">' );\n\n\t\tlet data: IdTextPair[] = [];\n\n\t\t// insert options (checkboxes and labels) and attach event handlers\n\t\tfor ( let value of this.values ) {\n\t\t\t// Try to get label, if not fall back to value id\n\t\t\tlet label = value.printoutValue;\n\t\t\tdata.push( { id: value.printoutValue, text: label } );\n\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.value-filter.select' ).then( () => {\n\n\t\t\tselect.select2( {\n\t\t\t\tmultiple: true,\n\t\t\t\tplaceholder: mw.message( 'srf-filtered-value-filter-placeholder' ).text(),\n\t\t\t\tdata: data\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:select\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, true );\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:unselect\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, false );\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn select;\n\t}\n\n\tprivate addControlForSwitches( filtercontrols: JQuery ) {\n\t\t// insert switches\n\t\tlet switches = this.options.hasOwnProperty( 'switches' ) ? this.options[ 'switches' ] : undefined;\n\t\tif ( switches !== undefined && switches.length > 0 ) {\n\n\t\t\tlet switchControls = $( '<div class=\"filtered-value-switches\">' );\n\n\t\t\tif ( $.inArray( 'and or', switches ) >= 0 ) {\n\n\t\t\t\tlet andorControl = $( '<div class=\"filtered-value-andor\">' );\n\n\t\t\t\tlet orControl = $( `<input type=\"radio\" name=\"filtered-value-${this.printrequestId}\"  class=\"filtered-value-or\" id=\"filtered-value-or-${this.printrequestId}\" value=\"or\" checked>` );\n\t\t\t\tlet andControl = $( `<input type=\"radio\" name=\"filtered-value-${this.printrequestId}\" class=\"filtered-value-and\" id=\"filtered-value-and-${this.printrequestId}\" value=\"and\">` );\n\n\t\t\t\tandControl\n\t\t\t\t.add( orControl )\n\t\t\t\t.on( 'change', undefined, { 'filter': this }, function ( eventObject: JQueryEventObject ) {\n\t\t\t\t\teventObject.data.filter.useOr( orControl.is( ':checked' ) );\n\t\t\t\t} );\n\n\t\t\t\tandorControl\n\t\t\t\t.append( orControl )\n\t\t\t\t.append( `<label for=\"filtered-value-or-${this.printrequestId}\">${mw.message( 'srf-filtered-value-filter-or' ).text()}</label>` )\n\t\t\t\t.append( andControl )\n\t\t\t\t.append( `<label for=\"filtered-value-and-${this.printrequestId}\">${mw.message( 'srf-filtered-value-filter-and' ).text()}</label>` )\n\t\t\t\t.appendTo( switchControls );\n\n\t\t\t}\n\n\t\t\tfiltercontrols.append( switchControls );\n\t\t}\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tif ( this.visibleValues.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet values = this.controller.getData()[ rowId ].printouts[ this.printrequestId ].values;\n\n\t\tif ( this._useOr ) {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) >= 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) < 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic onFilterUpdated( value: string, isChecked: boolean ) {\n\t\tlet index = this.visibleValues.indexOf( value );\n\n\t\tif ( isChecked && index === -1 ) {\n\t\t\tthis.visibleValues.push( value );\n\t\t} else if ( !isChecked && index >= 0 ) {\n\t\t\tthis.visibleValues.splice( index, 1 );\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n}\n","import { Options } from \"../types\";\nimport { Controller } from \"./Controller\";\nimport { ViewSelector } from \"./ViewSelector\";\nimport { View } from \"./View/View\";\nimport { ListView } from \"./View/ListView\";\nimport { TableView } from \"./View/TableView\";\nimport { MapView } from \"./View/MapView\";\nimport { CalendarView } from \"./View/CalendarView\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ValueFilter } from \"./Filter/ValueFilter\";\nimport { DistanceFilter } from \"./Filter/DistanceFilter\";\nimport { NumberFilter } from \"./Filter/NumberFilter\";\n\n/**\n * Central Filtered class\n *\n * Factory to setup everyhting else\n */\nexport class Filtered {\n\n\tprivate config: any;\n\tprivate target: JQuery;\n\n\tprivate viewTypes: { [key: string]: new( id: string, target: JQuery, controller: Controller, options?: any ) => View } = {\n\t\ttable: TableView,\n\t\tlist: ListView,\n\t\tmap: MapView,\n\t\tcalendar: CalendarView\n\t};\n\n\tprivate filterTypes: { [key: string]: new( id: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) => Filter } = {\n\t\tvalue: ValueFilter,\n\t\tdistance: DistanceFilter,\n\t\tnumber: NumberFilter\n\t};\n\n\t/**\n\t *\n\t * @param target\n\t * @param config\n\t */\n\tpublic constructor( target: JQuery, config: any ) {\n\t\tthis.config = config;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic run() {\n\t\tthis.showStartupMessage();\n\t\tthis.startDeferred();\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate showStartupMessage() {\n\t\t// this.target.text( \"Loading...\" );\n\t\t// TODO: Use spinner from srf.util\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate startDeferred() {\n\t\tsetTimeout( this.start(), 0 );\n\t}\n\n\tprivate start() {\n\t\tlet controller = new Controller( this.target, this.config.data, this.config.printrequests );\n\n\t\tthis.attachFilters( controller, this.target.find( 'div.filtered-filters' ) );\n\t\tthis.attachViewSelector( controller, this.target.find( 'div.filtered-views-selectors-container' ) );\n\t\tthis.attachViews( controller, this.target.find( 'div.filtered-views-container' ) );\n\n\t\t// lift-off\n\t\tcontroller.show();\n\n\t}\n\n\tprivate attachFilters( controller: Controller, filtersContainer: JQuery ) {\n\n\t\tfor ( let prId in this.config.printrequests ) {\n\n\t\t\tlet pr = this.config.printrequests[ prId ];\n\n\t\t\tif ( pr.hasOwnProperty( 'filters' ) ) {\n\n\t\t\t\tfor ( let filterid in pr.filters ) {\n\n\t\t\t\t\tif ( pr.filters.hasOwnProperty( filterid ) &&\n\t\t\t\t\t\tpr.filters[ filterid ].hasOwnProperty( 'type' ) &&\n\t\t\t\t\t\tthis.filterTypes.hasOwnProperty( pr.filters[ filterid ].type ) ) {\n\n\t\t\t\t\t\t//  target: JQuery, printrequest: string,\n\t\t\t\t\t\t// controller: Controller, options?: Options\n\t\t\t\t\t\tlet filter: Filter = new this.filterTypes[ pr.filters[ filterid ].type ]( filterid, filtersContainer.children( '#' + filterid ), prId, controller, pr.filters[ filterid ] );\n\n\t\t\t\t\t\tcontroller.attachFilter( filter );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate attachViewSelector( controller: Controller, viewSelectorContainer: JQuery ) {\n\t\tlet viewSelector = new ViewSelector( viewSelectorContainer, Object.keys( this.config.views ), controller );\n\t\tviewSelector.init();\n\t}\n\n\tprivate attachViews( controller: Controller, viewsContainer: JQuery ) {\n\n\t\t// attach views\n\t\tfor ( let viewid in this.config.views ) {\n\n\t\t\tlet viewtype = this.config.views[ viewid ][ 'type' ];\n\t\t\tlet viewHandlerClass = this.viewTypes.hasOwnProperty( viewtype ) ? this.viewTypes[ viewtype ] : View;\n\n\t\t\tlet view: View = new viewHandlerClass( viewid, viewsContainer.children( '#' + viewid ), controller, this.config.views[ viewid ] );\n\n\t\t\tview.init();\n\n\t\t\tcontroller.attachView( viewid, view );\n\n\t\t}\n\t}\n}\n","import { View } from \"./View\";\ndeclare let mw: any;\n\nexport class CalendarView extends View {\n\n\tprivate getI18N() {\n\t\treturn {\n\t\t\tmonthNames: [ mw.msg( 'january' ), mw.msg( 'february' ), mw.msg( 'march' ),\n\t\t\t\tmw.msg( 'april' ), mw.msg( 'may_long' ), mw.msg( 'june' ),\n\t\t\t\tmw.msg( 'july' ), mw.msg( 'august' ), mw.msg( 'september' ),\n\t\t\t\tmw.msg( 'october' ), mw.msg( 'november' ), mw.msg( 'december' )\n\t\t\t],\n\t\t\tmonthNamesShort: [ mw.msg( 'jan' ), mw.msg( 'feb' ), mw.msg( 'mar' ),\n\t\t\t\tmw.msg( 'apr' ), mw.msg( 'may' ), mw.msg( 'jun' ),\n\t\t\t\tmw.msg( 'jul' ), mw.msg( 'aug' ), mw.msg( 'sep' ),\n\t\t\t\tmw.msg( 'oct' ), mw.msg( 'nov' ), mw.msg( 'dec' )\n\t\t\t],\n\t\t\tdayNames: [ mw.msg( 'sunday' ), mw.msg( 'monday' ), mw.msg( 'tuesday' ),\n\t\t\t\tmw.msg( 'wednesday' ), mw.msg( 'thursday' ), mw.msg( 'friday' ), mw.msg( 'saturday' )\n\t\t\t],\n\t\t\tdayNamesShort: [ mw.msg( 'sun' ), mw.msg( 'mon' ), mw.msg( 'tue' ),\n\t\t\t\tmw.msg( 'wed' ), mw.msg( 'thu' ), mw.msg( 'fri' ), mw.msg( 'sat' )\n\t\t\t],\n\t\t\tbuttonText: {\n\t\t\t\ttoday: mw.msg( 'srf-ui-eventcalendar-label-today' ),\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-label-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-label-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-label-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tallDayText: mw.msg( 'srf-ui-eventcalendar-label-allday' ),\n\t\t\ttimeFormat: {\n\t\t\t\t'': mw.msg( 'srf-ui-eventcalendar-format-time' ),\n\t\t\t\tagenda: mw.msg( 'srf-ui-eventcalendar-format-time-agenda' )\n\t\t\t}\n\t\t\t,\n\t\t\taxisFormat: mw.msg( 'srf-ui-eventcalendar-format-axis' ),\n\t\t\ttitleFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-title-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-title-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-title-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tcolumnFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-column-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-column-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-column-day' )\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic init() {\n\n\t\tlet _i18n = this.getI18N();\n\n\t\t// initialize the calendar\n\t\tthis.target.fullCalendar( {\n\n\t\t\tfirstDay: this.options.firstDay,\n\t\t\tisRTL: this.options.isRTL,\n\t\t\tmonthNames: _i18n.monthNames,\n\t\t\tmonthNamesShort: _i18n.monthNamesShort,\n\t\t\tdayNames: _i18n.dayNames,\n\t\t\tdayNamesShort: _i18n.dayNamesShort,\n\t\t\tbuttonText: _i18n.buttonText,\n\t\t\tallDayText: _i18n.allDayText,\n\t\t\ttimeFormat: _i18n.timeFormat,\n\t\t\ttitleFormat: _i18n.titleFormat,\n\t\t\tcolumnFormat: _i18n.columnFormat\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate getEvent( rowId: any, rowData: any ) {\n\n\t\tlet eventdata: any = {\n\t\t\tid: rowId,\n\t\t\ttitle: rowData[ 'title' ],\n\t\t\tstart: rowData[ 'start' ],\n\t\t\tclassName: rowId\n\t\t};\n\n\t\tif ( rowData.hasOwnProperty( 'end' ) ) {\n\t\t\teventdata[ 'end' ] = rowData[ 'end' ];\n\t\t}\n\n\t\tif ( rowData.hasOwnProperty( 'url' ) ) {\n\t\t\teventdata[ 'url' ] = rowData[ 'url' ];\n\t\t}\n\n\t\treturn eventdata;\n\t}\n\n\tpublic showRows( rowIds: string[] ): any {\n\n\t\tlet events: any[] = [];\n\n\t\trowIds.forEach( ( rowId: string ) => {\n\n\t\t\tlet rowData = this.controller.getData()[ rowId ].data[ this.id ];\n\n\t\t\tif ( rowData.hasOwnProperty( 'start' ) ) {\n\t\t\t\tevents.push( this.getEvent( rowId, rowData ) );\n\t\t\t}\n\t\t} );\n\n\t\tthis.target.fullCalendar( 'addEventSource', events );\n\t}\n\n\tpublic hideRows( rowIds: string[] ): any {\n\t\tthis.target.fullCalendar( 'removeEvents', ( e: any ) => ( rowIds.indexOf( e._id ) >= 0 ) );\n\t}\n\n\tpublic show(): any {\n\t\tsuper.show();\n\t\tthis.target.fullCalendar( 'render' );\n\t}\n\n\tpublic hide(): any {\n\t\treturn super.hide();\n\t}\n\n}\n","import { View } from \"./View\";\nexport class ListView extends View {}\n","/// <reference types=\"leaflet\" />\n\nimport { View } from \"./View\";\nimport { Options } from \"../../types\"\n\ndeclare let mw: any;\n\nexport class MapView extends View {\n\n\tprivate map: L.Map = undefined;\n\tprivate icon: L.Icon = undefined;\n\tprivate markers: { [key: string]: L.Marker[] } = undefined;\n\tprivate markerClusterGroup: L.MarkerClusterGroup = undefined;\n\tprivate bounds: L.LatLngBounds = undefined;\n\tprivate initialized: boolean = false;\n\n\tprivate zoom: number = -1;\n\tprivate minZoom: number = -1;\n\tprivate maxZoom: number = -1;\n\n\tprivate leafletPromise: Promise<any> = undefined;\n\n\tpublic init() {\n\n\t\tlet data = this.controller.getData();\n\t\tlet markers: { [rowId: string]: L.Marker[] } = {};\n\n\t\tif ( this.options.hasOwnProperty( 'height' ) ) {\n\t\t\tthis.target.height( this.options.height );\n\t\t}\n\n\t\tthis.leafletPromise = mw.loader.using( 'ext.srf.filtered.map-view.leaflet' )\n\t\t.then( () => {\n\n\t\t\tlet bounds: L.LatLngBounds = undefined;\n\t\t\tlet disableClusteringAtZoom = this.getZoomForUnclustering();\n\n\t\t\tlet clusterOptions: Options = {\n\t\t\t\tanimateAddingMarkers: true,\n\t\t\t\tdisableClusteringAtZoom: disableClusteringAtZoom,\n\t\t\t\tspiderfyOnMaxZoom: disableClusteringAtZoom === null\n\t\t\t};\n\n\t\t\tclusterOptions = this.getOptions( [ 'maxClusterRadius', 'zoomToBoundsOnClick' ], clusterOptions );\n\n\t\t\tlet markerClusterGroup: L.MarkerClusterGroup = L.markerClusterGroup( clusterOptions );\n\n\t\t\tfor ( let rowId in data ) {\n\n\t\t\t\tif ( data[ rowId ][ 'data' ].hasOwnProperty( this.id ) ) {\n\t\t\t\t\tlet positions: L.LatLngLiteral[] = data[ rowId ][ 'data' ][ this.id ][ 'positions' ];\n\t\t\t\t\tmarkers[ rowId ] = [];\n\n\t\t\t\t\tfor ( let pos of positions ) {\n\n\t\t\t\t\t\tbounds = ( bounds === undefined ) ? new L.LatLngBounds( pos, pos ) : bounds.extend( pos );\n\n\t\t\t\t\t\tlet marker = this.getMarker( pos, data[ rowId ] );\n\t\t\t\t\t\tmarkers[ rowId ].push( marker );\n\t\t\t\t\t\tmarkerClusterGroup.addLayer( marker );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markerClusterGroup = markerClusterGroup;\n\t\t\tthis.markers = markers;\n\t\t\tthis.bounds = ( bounds === undefined ) ? new L.LatLngBounds( [ -180, -90 ], [ 180, 90 ] ) : bounds;\n\t\t} );\n\n\t\treturn super.init();\n\t}\n\n\tprivate getZoomForUnclustering() {\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster' ) && this.options[ 'marker cluster' ] === false ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster max zoom' ) ) {\n\t\t\treturn this.options[ 'marker cluster max zoom' ] + 1;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getIcon() {\n\t\tif ( this.icon === undefined ) {\n\n\t\t\tlet iconPath = this.controller.getPath() + 'css/images/';\n\n\t\t\tthis.icon = new L.Icon( {\n\t\t\t\t'iconUrl': iconPath + 'marker-icon.png',\n\t\t\t\t'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t\t'iconSize': [ 25, 41 ],\n\t\t\t\t'iconAnchor': [ 12, 41 ],\n\t\t\t\t'popupAnchor': [ 1, -34 ],\n\t\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t\t'shadowSize': [ 41, 41 ]\n\t\t\t} );\n\t\t}\n\n\t\treturn this.icon;\n\t}\n\n\tprivate getMarker( latLng: L.LatLngExpression, row: any ) {\n\t\tlet title = undefined;\n\t\tlet popup = [];\n\n\t\t// TODO: Use <div> instead of <b> and do CSS styling\n\n\t\tfor ( let prId in row[ 'printouts' ] ) {\n\t\t\tlet printrequest = (this.controller.getPrintRequests())[ prId ];\n\n\t\t\tif ( ! printrequest.hasOwnProperty('hide') || printrequest.hide === false ) {\n\t\t\t\tlet printouts = row[ 'printouts' ][ prId ];\n\n\t\t\t\tif ( title === undefined ) {\n\t\t\t\t\ttitle = printouts[ 'values' ].join( ', ' );\n\t\t\t\t\tpopup.push( '<b>' + printouts[ 'formatted values' ].join( ', ' ) + '</b>' );\n\t\t\t\t} else {\n\t\t\t\t\tpopup.push( (printouts.label ? '<b>' + printouts.label + ':</b> ' : '') + printouts[ 'formatted values' ].join( ', ' ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet marker = L.marker( latLng, { title: title, alt: title } );\n\t\tmarker.bindPopup( popup.join( '<br>' ) );\n\n\t\tmarker.setIcon( this.getIcon() );\n\t\treturn marker;\n\t}\n\n\tpublic lateInit() {\n\n\t\tif ( this.initialized ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\n\t\tlet that = this;\n\n\t\tthis.leafletPromise.then( () => {\n\n\t\t\tlet mapOptions: Options = {\n\t\t\t\tcenter: this.bounds !== undefined ? this.bounds.getCenter() : [ 0, 0 ]\n\t\t\t};\n\n\t\t\tmapOptions = that.getOptions( [ 'zoom', 'minZoom', 'maxZoom' ], mapOptions );\n\n\t\t\t// TODO: Limit zoom values to map max zoom\n\n\t\t\tthat.map = L.map( that.getTargetElement().get( 0 ), mapOptions );\n\t\t\tthat.map.addLayer( that.markerClusterGroup );\n\n\t\t\tif ( this.options.hasOwnProperty( 'map provider' ) ) {\n\t\t\t\tL.tileLayer.provider( this.options[ 'map provider' ] ).addTo( that.map );\n\t\t\t}\n\n\t\t\tif ( !mapOptions.hasOwnProperty( 'zoom' ) ) {\n\t\t\t\tthat.map.fitBounds( that.bounds );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tpublic getOptions( keys: string[], defaults: Options = {} ) {\n\n\t\tfor ( let key of keys ) {\n\t\t\tif ( this.options.hasOwnProperty( key ) ) {\n\t\t\t\tdefaults[ key ] = this.options[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn defaults;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.addLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.removeLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tprivate manipulateLayers( rowIds: string[], cb: ( layers: L.Layer[] ) => void ) {\n\n\t\tlet layersFromRowIds = this.getLayersFromRowIds( rowIds );\n\n\t\tif ( layersFromRowIds.length > 0 ) {\n\t\t\tcb( layersFromRowIds );\n\t\t}\n\n\t}\n\n\tprivate getLayersFromRowIds( rowIds: string[] ) {\n\t\treturn this.flatten( this.getLayersFromRowIdsRaw( rowIds ) );\n\t}\n\n\tprivate getLayersFromRowIdsRaw( rowIds: string[] ) {\n\t\treturn rowIds.map( ( rowId: string ) => this.markers[ rowId ] ? this.markers[ rowId ] : [] );\n\t}\n\n\tprivate flatten( markers: L.Layer[][] ): L.Layer[] {\n\t\treturn markers.reduce( ( result: L.Layer[], layers: L.Layer[] ) => result.concat( layers ), [] );\n\t}\n\n\tpublic show() {\n\t\tsuper.show();\n\t\tthis.lateInit();\n\t}\n\n}\n","import { View } from \"./View\";\nexport class TableView extends View {}","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport class View {\n\n\tprotected id: string = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected controller: Controller = undefined;\n\tprotected options: Options = undefined;\n\n\tpublic constructor( id: string, target: JQuery, c: Controller, options: Options = {} ) {\n\t\tthis.id = id;\n\t\tthis.target = target;\n\t\tthis.controller = c;\n\t\tthis.options = options;\n\t}\n\n\tpublic init() {}\n\n\tpublic getTargetElement(): JQuery {\n\t\treturn this.target;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\tthis.target.find( '.' + rowId ).slideDown( 400 );\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\tthis.target.find( '.' + rowId ).slideUp( 400 );\n\t\t} );\n\t}\n\n\tpublic show() {\n\t\tthis.target.show();\n\t}\n\n\tpublic hide() {\n\t\tthis.target.hide();\n\t}\n}\n","import { Controller } from \"./Controller\";\nexport class ViewSelector {\n\n\tprivate target: JQuery = undefined;\n\tprivate viewIDs: string[] = undefined;\n\n\tprivate controller: Controller = undefined;\n\n\tpublic constructor( target: JQuery, viewIDs: string[], controller: Controller ) {\n\t\tthis.target = target;\n\t\tthis.viewIDs = viewIDs;\n\t\tthis.controller = controller;\n\t}\n\n\tpublic init() {\n\t\tif ( this.viewIDs.length > 1 ) {\n\t\t\tthis.viewIDs.forEach( ( id: string) => { this.target.on( 'click', '.' + id, { 'target': id, 'controller' : this.controller }, ViewSelector.onSelectorSelected ); } );\n\t\t\tthis.target.children().first().addClass( 'selected');\n\t\t\tthis.target.show();\n\t\t}\n\t}\n\n\tprivate static onSelectorSelected( event: JQueryEventObject ) {\n\n\t\tevent.data.controller.onViewSelected( event.data.target );\n\n\t\t$( event.target )\n\t\t.addClass( 'selected')\n\t\t.siblings().removeClass( 'selected' );\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n\n}","import { Filtered } from \"./Filtered/Filtered\";\n\ndeclare let mw: any;\nlet config = mw.config.get( 'srfFilteredConfig' );\n\nfor ( let id in config ) {\n\tif ( config.hasOwnProperty( id ) ) {\n\t\tlet f = new Filtered( $( '#' + id ), config[ id ] );\n\t\tf.run();\n\t}\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}